//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PasswordBox {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PasswordBox.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT Config ConnectionString, using AESCryptography\r\n\r\n\r\n[Applicable: unknown].
        /// </summary>
        internal static string AESTool {
            get {
                return ResourceManager.GetString("AESTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT Aspire Config ConnectionString.\r\n\r\n(Password: &apos;give me admin access&apos;)\r\n\r\n\r\n[Applicable: Aspire, MPG].
        /// </summary>
        internal static string AspireEncryption {
            get {
                return ResourceManager.GetString("AspireEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT Vision Config passwords, using AvanzaKeyStore x64\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string AvanzaKeyStoreConsole {
            get {
                return ResourceManager.GetString("AvanzaKeyStoreConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT Vision SmartClient Config passwords. It is DES based encryption, using before AvanzaKeyStore technique\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string EncryptDecrypt {
            get {
                return ResourceManager.GetString("EncryptDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to GENERATE HASH for Classic Vision SmartClient User (LoginID) passwords\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string HashCalculator {
            get {
                return ResourceManager.GetString("HashCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT Vision SmartClient or Settlement Manager (RdvSM) Config passwords, using AvanzaKeyStore x32.\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string KeySimulator {
            get {
                return ResourceManager.GetString("KeySimulator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to GENERATE, ENCRYPT, DECRYPT KEYS and DATA as well for AvanzaKeyStore x64.\r\n\r\n\r\n[Applicable: Vision, RDV, RdvSM].
        /// </summary>
        internal static string KSUConsole {
            get {
                return ResourceManager.GetString("KSUConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to GENERATE HASH for Vision User (LoginID) passwords, using ComputeHash with Salt\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string PasswordGenerator2020 {
            get {
                return ResourceManager.GetString("PasswordGenerator2020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT RdvNotification Config Password, using RdvCryptography\r\n\r\n\r\n[Applicable: RdvNotification, RDV].
        /// </summary>
        internal static string RdvEncryption {
            get {
                return ResourceManager.GetString("RdvEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT Vigilus Config Password, using Cryptography\r\n\r\n\r\n[Applicable: Vigilus].
        /// </summary>
        internal static string VigilusEncryption {
            get {
                return ResourceManager.GetString("VigilusEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use to ENCRYPT or DECRYPT Vision Config passwords, using AvanzaKeyStore x64.\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string VisionPasswordUtility {
            get {
                return ResourceManager.GetString("VisionPasswordUtility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to Vision Database and UPDATE Vision Application&apos;s login user password\r\n\r\n\r\n[Applicable: Vision].
        /// </summary>
        internal static string VisionUserPasswordReset {
            get {
                return ResourceManager.GetString("VisionUserPasswordReset", resourceCulture);
            }
        }
    }
}
